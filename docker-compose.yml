version: '3.7'

services:
  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static_volume:/home/app/microservice/static
    depends_on:
      - web
    restart: "on-failure"
  web:
    build: . #build the image for the web service from the dockerfile in parent directory
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py collectstatic --noinput &&
                    gunicorn main.wsgi:application --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - ./app:/microservice:rw # map data and files from parent directory in host to microservice directory in docker containe
      - static_volume:/home/app/microservice/static
    environment:
      - BLOCKONOMICS_API_KEY=${BLOCKONOMICS_API_KEY}
      - ADMIN_IPS=${ADMIN_IPS}
      - APP_PORT=${APP_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
    image: sampleapp

    expose:
      - ${APP_PORT}
    restart: "on-failure"

volumes:
  static_volume: